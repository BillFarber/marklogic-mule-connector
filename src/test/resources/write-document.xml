<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:marklogic="http://www.mulesoft.org/schema/mule/marklogic"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/marklogic http://www.mulesoft.org/schema/mule/marklogic/current/mule-marklogic.xsd">

  <configuration-properties file="connection.properties"/>

  <marklogic:config name="config">
    <marklogic:connection
        host="${config.hostName}"
        port="8022"
        username="${config.username}"
        password="${config.password}"
        authenticationType="DIGEST"/>
  </marklogic:config>

  <flow name="writeTextDocumentWithAllMetadata">
    <marklogic:write-documents config-ref="config" uriPrefix="/writeTextDocumentWithAllMetadata/hello" uriSuffix=".txt"
                          documentFormat="UNKNOWN" generateUUID="False"
                          permissions="rest-reader,read,rest-reader,update" quality="1"
                          collections="writeTextDocumentWithAllMetadata">
      <marklogic:contents><![CDATA[#[java!test::Data::getTextDoc()]]]></marklogic:contents>
    </marklogic:write-documents>
    <marklogic:read-documents config-ref="config" uris="#[['/writeTextDocumentWithAllMetadata/hello.txt']]" categories="all"/>
  </flow>

  <flow name="writeJsonDocumentWithAllMetadata">
    <marklogic:write-documents config-ref="config" uriPrefix="/writeJsonDocumentWithAllMetadata/hello" uriSuffix=".json"
                               documentFormat="JSON" generateUUID="False"
                          permissions="rest-reader,read,rest-reader,update" quality="2"
                          collections="writeJsonDocumentWithAllMetadata">
      <marklogic:contents><![CDATA[#[java!test::Data::getJsonDoc()]]]></marklogic:contents>
    </marklogic:write-documents>
    <marklogic:read-documents config-ref="config" uris="#[['/writeJsonDocumentWithAllMetadata/hello.json']]" categories="all"/>
  </flow>

  <flow name="writeXmlDocumentWithAllMetadata">
    <marklogic:write-documents config-ref="config" uriPrefix="/writeXmlDocumentWithAllMetadata/hello" uriSuffix=".xml"
                               documentFormat="XML" generateUUID="False"
                          permissions="rest-reader,read,rest-reader,update" quality="3"
                          collections="writeXmlDocumentWithAllMetadata">
      <marklogic:contents><![CDATA[#[java!test::Data::getXmlDoc()]]]></marklogic:contents>
    </marklogic:write-documents>
    <marklogic:read-documents config-ref="config" uris="#[['/writeXmlDocumentWithAllMetadata/hello.xml']]" categories="all"/>
  </flow>

  <flow name="writeBinaryDocumentWithAllMetadata">
    <marklogic:write-documents config-ref="config" uriPrefix="/writeBinaryDocumentWithAllMetadata/logo" uriSuffix=".png"
                               documentFormat="BINARY" generateUUID="False"
                          permissions="rest-reader,read,rest-reader,update" quality="4"
                          collections="writeBinaryDocumentWithAllMetadata">
      <marklogic:contents><![CDATA[#[java!test::Data::getBinaryDoc()]]]></marklogic:contents>
    </marklogic:write-documents>
    <marklogic:read-documents config-ref="config" uris="#[['/writeBinaryDocumentWithAllMetadata/logo.png']]" categories="all"/>
  </flow>

  <flow name="writeDocumentWithoutUriWithTextFormat">
    <marklogic:write-documents config-ref="config" documentFormat="TEXT" permissions="rest-reader,read,rest-reader,update"
                          quality="5" collections="writeDocumentWithoutUriWithTextFormat">
      <marklogic:contents><![CDATA[#[java!test::Data::getTextDoc()]]]></marklogic:contents>
    </marklogic:write-documents>
    <marklogic:read-documents config-ref="config" collections="writeDocumentWithoutUriWithTextFormat"
                            categories="all"/>
  </flow>

  <flow name="writeDocumentWithoutUriWithoutFormat">
    <marklogic:write-documents config-ref="config" permissions="rest-reader,read,rest-reader,update" quality="6"
                          collections="writeDocumentWithoutUriWithoutFormat" documentFormat="UNKNOWN">
      <marklogic:contents><![CDATA[#[java!test::Data::getTextDoc()]]]></marklogic:contents>
    </marklogic:write-documents>
    <marklogic:read-documents config-ref="config" collections="writeDocumentWithoutUriWithoutFormat" categories="all"/>
  </flow>

  <flow name="writeDocumentWithoutUriWithJsonFormat">
    <marklogic:write-documents config-ref="config" documentFormat="JSON" permissions="rest-reader,read,rest-reader,update"
                          quality="7" collections="writeDocumentWithoutUriWithJsonFormat">
      <marklogic:contents><![CDATA[#[java!test::Data::getJsonDoc()]]]></marklogic:contents>
    </marklogic:write-documents>
    <marklogic:read-documents config-ref="config" collections="writeDocumentWithoutUriWithJsonFormat"
                            categories="all"/>
  </flow>

  <flow name="writeDocumentWithoutUriWithXmlFormat">
    <marklogic:write-documents config-ref="config" documentFormat="XML" permissions="rest-reader,read,rest-reader,update"
                          quality="8" collections="writeDocumentWithoutUriWithXmlFormat">
      <marklogic:contents><![CDATA[#[java!test::Data::getXmlDoc()]]]></marklogic:contents>
    </marklogic:write-documents>
    <marklogic:read-documents config-ref="config" collections="writeDocumentWithoutUriWithXmlFormat" categories="all"/>
  </flow>

  <flow name="writeDocumentWithoutUriWithBinaryFormat">
    <marklogic:write-documents config-ref="config" documentFormat="BINARY" permissions="rest-reader,read,rest-reader,update"
                          quality="9" collections="writeDocumentWithoutUriWithBinaryFormat">
      <marklogic:contents><![CDATA[#[java!test::Data::getXmlDoc()]]]></marklogic:contents>
    </marklogic:write-documents>
    <marklogic:read-documents config-ref="config" collections="writeDocumentWithoutUriWithBinaryFormat"
                            categories="all"/>
  </flow>

  <flow name="writeDocumentWithPrefixWithoutUuid">
    <marklogic:write-documents config-ref="config" uriPrefix="writeDocumentWithPrefixWithoutUuid" documentFormat="TEXT"
                          generateUUID="False"
                          permissions="rest-reader,read,rest-reader,update" quality="10"
                          collections="writeDocumentWithPrefixWithoutUuid">
      <marklogic:contents><![CDATA[#[java!test::Data::getTextDoc()]]]></marklogic:contents>
    </marklogic:write-documents>
    <marklogic:read-documents config-ref="config" uris="#[['writeDocumentWithPrefixWithoutUuid']]" categories="all"/>
  </flow>

  <flow name="writeDocumentWithPrefixAndSuffix">
    <marklogic:write-documents config-ref="config" uriPrefix="writeDocumentWithPrefixAndSuffix" uriSuffix=".json"
                               documentFormat="JSON" generateUUID="False"
                          permissions="rest-reader,read,rest-reader,update" quality="11"
                          collections="writeDocumentWithPrefixAndSuffix">
      <marklogic:contents><![CDATA[#[java!test::Data::getJsonDoc()]]]></marklogic:contents>
    </marklogic:write-documents>
    <marklogic:read-documents config-ref="config" uris="#[['writeDocumentWithPrefixAndSuffix.json']]" categories="all"/>
  </flow>

  <flow name="writeDocumentWithUuid">
    <marklogic:write-documents config-ref="config" documentFormat="JSON"
                          permissions="rest-reader,read,rest-reader,update" quality="12"
                          collections="writeDocumentWithUuid">
      <marklogic:contents><![CDATA[#[java!test::Data::getJsonDoc()]]]></marklogic:contents>
    </marklogic:write-documents>
    <marklogic:read-documents config-ref="config" collections="writeDocumentWithUuid" categories="all"/>
  </flow>

  <flow name="writeDocumentWithTemporalCollection">
    <marklogic:write-documents config-ref="config" documentFormat="XML"
                               permissions="rest-reader,read,rest-reader,update" generateUUID="False"
                               uriPrefix="/documentWithTemporalCollection" uriSuffix=".xml" temporalCollection="mule-temporal-collection">
      <marklogic:contents><![CDATA[#[java!test::Data::getTemporalDoc()]]]></marklogic:contents>
    </marklogic:write-documents>
    <marklogic:read-documents config-ref="config" uris="#[['/documentWithTemporalCollection.xml']]" categories="all"/>
  </flow>

  <flow name="writeDocumentWithTransform">
    <marklogic:write-documents config-ref="config" documentFormat="JSON" collections="transformed-data"
                               permissions="rest-reader,read,rest-reader,update" quality="14" generateUUID="False"
                               uriPrefix="/writeDocumentWithTransform" transform="testTransform"
                               transformParameters="hello;key;world;value" transformParametersDelimiter=";">
      <marklogic:contents><![CDATA[#[java!test::Data::getJsonDoc()]]]></marklogic:contents>
    </marklogic:write-documents>
    <marklogic:read-documents config-ref="config" uris="#[['/writeDocumentWithTransform']]"/>
  </flow>

  <flow name="writeDocumentWithArrayInput">
    <marklogic:write-documents config-ref="config" documentFormat="TEXT" collections="writeDocumentWithArrayInput"
                               permissions="rest-reader,read,rest-reader,update" quality="15" generateUUID="True"
                               uriPrefix="/writeDocumentWithArrayInput/">
      <marklogic:contents><![CDATA[#[java!test::Data::getTextAndJsonDocs()]]]></marklogic:contents>
    </marklogic:write-documents>
    <marklogic:read-documents config-ref="config" collections="writeDocumentWithArrayInput" categories="all"/>
  </flow>

  <flow name="writeDocumentsWithMultipleCollections">
    <marklogic:write-documents config-ref="config" documentFormat="TEXT" collections="collection1,collection2"
                               permissions="rest-reader,read,rest-reader,update" generateUUID="True"
                               uriPrefix="/writeDocumentsWithMultipleCollections/">
      <marklogic:contents><![CDATA[#[java!test::Data::getTextAndJsonDocs()]]]></marklogic:contents>
    </marklogic:write-documents>
    <marklogic:read-documents config-ref="config" collections="collection1,collection2" categories="all"/>
  </flow>

</mule>
